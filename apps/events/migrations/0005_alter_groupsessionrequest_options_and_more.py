# Generated by Django 5.2.5 on 2025-09-08 01:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0004_alter_groupsessionrequest_options_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='groupsessionrequest',
            options={'permissions': [('approve_group_request', 'Approve group request'), ('withdraw_group_request', 'Withdraw group request')]},
        ),
        migrations.AlterModelOptions(
            name='peersessionrequest',
            options={'permissions': [('approve_peer_request', 'Approve peer request'), ('withdraw_peer_request', 'Withdraw peer request')]},
        ),
        migrations.AddField(
            model_name='groupsessionrequest',
            name='concessionary_status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Approved'), (1, 'Rejected'), (2, 'Pending'), (3, 'Withdrawn')], default=2, help_text='By default, this will be pending unless concessionary price request do not require approval, then it will be automatically approved. If the request is left pending until the start of the session, the request will be automatically rejected'),
        ),
        migrations.AddField(
            model_name='groupsessionrequest',
            name='refund_status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Approved'), (1, 'Rejected'), (2, 'Pending'), (3, 'Withdrawn')], default=2, help_text='By default, this will be pending unless refunds does not require approval, then it will be automatically approved. If the request is left pending until the start of the session, the request will be automatically rejected'),
        ),
        migrations.AddField(
            model_name='groupsessionrequest',
            name='refunded',
            field=models.BooleanField(default=True, help_text='\n                Payments will refunded if:\n                    (a) refunds are automatically approved and a user withdraws an approved request\n                    (b) a user requests a refund and the request is approved\n            '),
        ),
        migrations.AddField(
            model_name='peersessionrequest',
            name='concessionary_status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Approved'), (1, 'Rejected'), (2, 'Pending'), (3, 'Withdrawn')], default=2, help_text='By default, this will be pending unless concessionary price request do not require approval, then it will be automatically approved. If the request is left pending until the start of the session, the request will be automatically rejected'),
        ),
        migrations.AddField(
            model_name='peersessionrequest',
            name='refund_status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Approved'), (1, 'Rejected'), (2, 'Pending'), (3, 'Withdrawn')], default=2, help_text='By default, this will be pending unless refunds does not require approval, then it will be automatically approved. If the request is left pending until the start of the session, the request will be automatically rejected'),
        ),
        migrations.AddField(
            model_name='peersessionrequest',
            name='refunded',
            field=models.BooleanField(default=True, help_text='\n                Payments will refunded if:\n                    (a) refunds are automatically approved and a user withdraws an approved request\n                    (b) a user requests a refund and the request is approved\n            '),
        ),
        migrations.AlterField(
            model_name='groupsessionrequest',
            name='status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Approved'), (1, 'Rejected'), (2, 'Pending'), (3, 'Withdrawn')], default=2, help_text='By default, this will be pending unless the session does not require approval, then it will be automatically approved. If the request is left pending until the start of the session, the request will be automatically rejected'),
        ),
        migrations.AlterField(
            model_name='peersessionrequest',
            name='status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Approved'), (1, 'Rejected'), (2, 'Pending'), (3, 'Withdrawn')], default=2, help_text='By default, this will be pending unless the session does not require approval, then it will be automatically approved. If the request is left pending until the start of the session, the request will be automatically rejected'),
        ),
    ]
