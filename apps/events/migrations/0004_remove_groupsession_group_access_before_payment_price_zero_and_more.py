# Generated by Django 5.2.5 on 2025-08-15 02:31

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0003_create_default_sessions_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='groupsession',
            name='group_access_before_payment_price_zero',
        ),
        migrations.RemoveConstraint(
            model_name='peersession',
            name='peer_access_before_payment_price_zero',
        ),
        migrations.AlterField(
            model_name='groupsession',
            name='currency',
            field=models.CharField(choices=[('USD', 'US Dollar ($)'), ('CAD', 'Canadian Dollar (CA$)'), ('EUR', 'Euro (€)'), ('AED', 'United Arab Emirates Dirham (AED)'), ('AFN', 'Afghan Afghani (Af)'), ('ALL', 'Albanian Lek (ALL)'), ('AMD', 'Armenian Dram (AMD)'), ('ARS', 'Argentine Peso (AR$)'), ('AUD', 'Australian Dollar (AU$)'), ('AZN', 'Azerbaijani Manat (man.)'), ('BAM', 'Bosnia-Herzegovina Convertible Mark (KM)'), ('BDT', 'Bangladeshi Taka (Tk)'), ('BGN', 'Bulgarian Lev (BGN)'), ('BIF', 'Burundian Franc (FBu)'), ('BND', 'Brunei Dollar (BN$)'), ('BOB', 'Bolivian Boliviano (Bs)'), ('BRL', 'Brazilian Real (R$)'), ('BWP', 'Botswanan Pula (BWP)'), ('BYN', 'Belarusian Ruble (Br)'), ('BZD', 'Belize Dollar (BZ$)'), ('CDF', 'Congolese Franc (CDF)'), ('CHF', 'Swiss Franc (CHF)'), ('CLP', 'Chilean Peso (CL$)'), ('CNY', 'Chinese Yuan (CN¥)'), ('COP', 'Colombian Peso (CO$)'), ('CRC', 'Costa Rican Colón (₡)'), ('CVE', 'Cape Verdean Escudo (CV$)'), ('CZK', 'Czech Republic Koruna (Kč)'), ('DJF', 'Djiboutian Franc (Fdj)'), ('DKK', 'Danish Krone (Dkr)'), ('DOP', 'Dominican Peso (RD$)'), ('DZD', 'Algerian Dinar (DA)'), ('EGP', 'Egyptian Pound (EGP)'), ('ETB', 'Ethiopian Birr (Br)'), ('GBP', 'British Pound Sterling (£)'), ('GEL', 'Georgian Lari (GEL)'), ('GNF', 'Guinean Franc (FG)'), ('GTQ', 'Guatemalan Quetzal (GTQ)'), ('HKD', 'Hong Kong Dollar (HK$)'), ('HNL', 'Honduran Lempira (HNL)'), ('HUF', 'Hungarian Forint (Ft)'), ('IDR', 'Indonesian Rupiah (Rp)'), ('ILS', 'Israeli New Sheqel (₪)'), ('INR', 'Indian Rupee (Rs)'), ('ISK', 'Icelandic Króna (Ikr)'), ('JMD', 'Jamaican Dollar (J$)'), ('JPY', 'Japanese Yen (¥)'), ('KES', 'Kenyan Shilling (Ksh)'), ('KHR', 'Cambodian Riel (KHR)'), ('KMF', 'Comorian Franc (CF)'), ('KRW', 'South Korean Won (₩)'), ('KZT', 'Kazakhstani Tenge (KZT)'), ('LBP', 'Lebanese Pound (L.L.)'), ('LKR', 'Sri Lankan Rupee (SLRs)'), ('MAD', 'Moroccan Dirham (MAD)'), ('MDL', 'Moldovan Leu (MDL)'), ('MGA', 'Malagasy Ariary (MGA)'), ('MKD', 'Macedonian Denar (MKD)'), ('MMK', 'Myanma Kyat (MMK)'), ('MOP', 'Macanese Pataca (MOP$)'), ('MUR', 'Mauritian Rupee (MURs)'), ('MXN', 'Mexican Peso (MX$)'), ('MYR', 'Malaysian Ringgit (RM)'), ('MZN', 'Mozambican Metical (MTn)'), ('NAD', 'Namibian Dollar (N$)'), ('NGN', 'Nigerian Naira (₦)'), ('NIO', 'Nicaraguan Córdoba (C$)'), ('NOK', 'Norwegian Krone (Nkr)'), ('NPR', 'Nepalese Rupee (NPRs)'), ('NZD', 'New Zealand Dollar (NZ$)'), ('PAB', 'Panamanian Balboa (B/.)'), ('PEN', 'Peruvian Nuevo Sol (S/.)'), ('PHP', 'Philippine Peso (₱)'), ('PKR', 'Pakistani Rupee (PKRs)'), ('PLN', 'Polish Zloty (zł)'), ('PYG', 'Paraguayan Guarani (₲)'), ('QAR', 'Qatari Rial (QR)'), ('RON', 'Romanian Leu (RON)'), ('RSD', 'Serbian Dinar (din.)'), ('RUB', 'Russian Ruble (RUB)'), ('RWF', 'Rwandan Franc (RWF)'), ('SAR', 'Saudi Riyal (SR)'), ('SEK', 'Swedish Krona (Skr)'), ('SGD', 'Singapore Dollar (S$)'), ('SOS', 'Somali Shilling (Ssh)'), ('THB', 'Thai Baht (฿)'), ('TOP', 'Tongan Paʻanga (T$)'), ('TRY', 'Turkish Lira (TL)'), ('TTD', 'Trinidad and Tobago Dollar (TT$)'), ('TWD', 'New Taiwan Dollar (NT$)'), ('TZS', 'Tanzanian Shilling (TSh)'), ('UAH', 'Ukrainian Hryvnia (₴)'), ('UGX', 'Ugandan Shilling (USh)'), ('UYU', 'Uruguayan Peso ($U)'), ('UZS', 'Uzbekistan Som (UZS)'), ('VND', 'Vietnamese Dong (₫)'), ('XAF', 'CFA Franc BEAC (FCFA)'), ('XOF', 'CFA Franc BCEAO (CFA)'), ('YER', 'Yemeni Rial (YR)'), ('ZAR', 'South African Rand (R)')], default='GBP', max_length=3),
        ),
        migrations.AlterField(
            model_name='peersession',
            name='currency',
            field=models.CharField(choices=[('USD', 'US Dollar ($)'), ('CAD', 'Canadian Dollar (CA$)'), ('EUR', 'Euro (€)'), ('AED', 'United Arab Emirates Dirham (AED)'), ('AFN', 'Afghan Afghani (Af)'), ('ALL', 'Albanian Lek (ALL)'), ('AMD', 'Armenian Dram (AMD)'), ('ARS', 'Argentine Peso (AR$)'), ('AUD', 'Australian Dollar (AU$)'), ('AZN', 'Azerbaijani Manat (man.)'), ('BAM', 'Bosnia-Herzegovina Convertible Mark (KM)'), ('BDT', 'Bangladeshi Taka (Tk)'), ('BGN', 'Bulgarian Lev (BGN)'), ('BIF', 'Burundian Franc (FBu)'), ('BND', 'Brunei Dollar (BN$)'), ('BOB', 'Bolivian Boliviano (Bs)'), ('BRL', 'Brazilian Real (R$)'), ('BWP', 'Botswanan Pula (BWP)'), ('BYN', 'Belarusian Ruble (Br)'), ('BZD', 'Belize Dollar (BZ$)'), ('CDF', 'Congolese Franc (CDF)'), ('CHF', 'Swiss Franc (CHF)'), ('CLP', 'Chilean Peso (CL$)'), ('CNY', 'Chinese Yuan (CN¥)'), ('COP', 'Colombian Peso (CO$)'), ('CRC', 'Costa Rican Colón (₡)'), ('CVE', 'Cape Verdean Escudo (CV$)'), ('CZK', 'Czech Republic Koruna (Kč)'), ('DJF', 'Djiboutian Franc (Fdj)'), ('DKK', 'Danish Krone (Dkr)'), ('DOP', 'Dominican Peso (RD$)'), ('DZD', 'Algerian Dinar (DA)'), ('EGP', 'Egyptian Pound (EGP)'), ('ETB', 'Ethiopian Birr (Br)'), ('GBP', 'British Pound Sterling (£)'), ('GEL', 'Georgian Lari (GEL)'), ('GNF', 'Guinean Franc (FG)'), ('GTQ', 'Guatemalan Quetzal (GTQ)'), ('HKD', 'Hong Kong Dollar (HK$)'), ('HNL', 'Honduran Lempira (HNL)'), ('HUF', 'Hungarian Forint (Ft)'), ('IDR', 'Indonesian Rupiah (Rp)'), ('ILS', 'Israeli New Sheqel (₪)'), ('INR', 'Indian Rupee (Rs)'), ('ISK', 'Icelandic Króna (Ikr)'), ('JMD', 'Jamaican Dollar (J$)'), ('JPY', 'Japanese Yen (¥)'), ('KES', 'Kenyan Shilling (Ksh)'), ('KHR', 'Cambodian Riel (KHR)'), ('KMF', 'Comorian Franc (CF)'), ('KRW', 'South Korean Won (₩)'), ('KZT', 'Kazakhstani Tenge (KZT)'), ('LBP', 'Lebanese Pound (L.L.)'), ('LKR', 'Sri Lankan Rupee (SLRs)'), ('MAD', 'Moroccan Dirham (MAD)'), ('MDL', 'Moldovan Leu (MDL)'), ('MGA', 'Malagasy Ariary (MGA)'), ('MKD', 'Macedonian Denar (MKD)'), ('MMK', 'Myanma Kyat (MMK)'), ('MOP', 'Macanese Pataca (MOP$)'), ('MUR', 'Mauritian Rupee (MURs)'), ('MXN', 'Mexican Peso (MX$)'), ('MYR', 'Malaysian Ringgit (RM)'), ('MZN', 'Mozambican Metical (MTn)'), ('NAD', 'Namibian Dollar (N$)'), ('NGN', 'Nigerian Naira (₦)'), ('NIO', 'Nicaraguan Córdoba (C$)'), ('NOK', 'Norwegian Krone (Nkr)'), ('NPR', 'Nepalese Rupee (NPRs)'), ('NZD', 'New Zealand Dollar (NZ$)'), ('PAB', 'Panamanian Balboa (B/.)'), ('PEN', 'Peruvian Nuevo Sol (S/.)'), ('PHP', 'Philippine Peso (₱)'), ('PKR', 'Pakistani Rupee (PKRs)'), ('PLN', 'Polish Zloty (zł)'), ('PYG', 'Paraguayan Guarani (₲)'), ('QAR', 'Qatari Rial (QR)'), ('RON', 'Romanian Leu (RON)'), ('RSD', 'Serbian Dinar (din.)'), ('RUB', 'Russian Ruble (RUB)'), ('RWF', 'Rwandan Franc (RWF)'), ('SAR', 'Saudi Riyal (SR)'), ('SEK', 'Swedish Krona (Skr)'), ('SGD', 'Singapore Dollar (S$)'), ('SOS', 'Somali Shilling (Ssh)'), ('THB', 'Thai Baht (฿)'), ('TOP', 'Tongan Paʻanga (T$)'), ('TRY', 'Turkish Lira (TL)'), ('TTD', 'Trinidad and Tobago Dollar (TT$)'), ('TWD', 'New Taiwan Dollar (NT$)'), ('TZS', 'Tanzanian Shilling (TSh)'), ('UAH', 'Ukrainian Hryvnia (₴)'), ('UGX', 'Ugandan Shilling (USh)'), ('UYU', 'Uruguayan Peso ($U)'), ('UZS', 'Uzbekistan Som (UZS)'), ('VND', 'Vietnamese Dong (₫)'), ('XAF', 'CFA Franc BEAC (FCFA)'), ('XOF', 'CFA Franc BCEAO (CFA)'), ('YER', 'Yemeni Rial (YR)'), ('ZAR', 'South African Rand (R)')], default='GBP', max_length=3),
        ),
        migrations.AddConstraint(
            model_name='groupsession',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('access_before_payment', False), ('price', 0)), models.Q(('price', 0), _negated=True), _connector='OR'), name='group_access_before_payment_price_zero', violation_error_message="Free sessions can't require access before payment"),
        ),
        migrations.AddConstraint(
            model_name='peersession',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('access_before_payment', False), ('price', 0)), models.Q(('price', 0), _negated=True), _connector='OR'), name='peer_access_before_payment_price_zero', violation_error_message="Free sessions can't require access before payment"),
        ),
    ]
